#+title: Readme

* Construction Site
A project exploring number and algebra representations in the human brain using fMRI data.

** Dataset
:PROPERTIES:
:VISIBILITY: folded
:END:
- https://openneuro.org/datasets/ds004791/versions/1.0.0
- https://osf.io/y763r/
- https://onlinelibrary.wiley.com/doi/full/10.1002/hbm.26495
- 68 children
- age avg: 9
- 36 problems per run (12 per condition)
- Task: Arithmetic, Matching, VSWM
- Modality: T1w
-

** Task Stack
:PROPERTIES:
:VISIBILITY: folded
:END:
- [X] reorganize the repository, write readme, organize results
- [X] organize a presentation for PI
- [X] do classification task on individual numbers (?) (whole brain data)
- [X] train multi-class classification using SVM
- [X] find material
- [X] try it out!
- [X] pair fmri response with task onset info, see it move
- [X] data-wrangling
- [X] download dataset
- [X] create dev env using flake, =shell.nix=
- [X] pyenv
- [X] ROI extraction
- [X] begin group analysis (classifiers) (prereqs?)
- [X] how to save? pickle? nii?
- [X] ask about design mat choice
- [X] what next? group level? classifier?
- [X] write a good plotting function (threshholds? slice at what interval?)
- [X] build single-subject contrasts of different numbers
- [X] find a way to plot
- [X] build & clarify abstraction of design matrices (+clean up notebook format)
- [X] refactor to include specific numbers into the design matrix
- [X] train level 1 glm using ~trial_type~ as design mat
- [X] add smoothing
- [X] add in noise covariates (head motion corr)
- [X] add responses from the same number together, print the 10 numbers
- [X] use task to index data
- [X] write indexing wheels acc. pipeline
- [X] try preliminary processing task to know the interfaces
- [X] what group level to do? use GPT's answer
- [X] figure out the statistical tools needed to test the hypothesis
- [X] learn GLM to translate the topic into mathematical languages
- [X] organize possible analysis for asking
- [X] find an arbitrary analysis to do
- [X] train trial wise glm, use that as feature, linear classifier
- [X] migrate to pure py env.
- [X] find a proper material for the depth of learning
- [X] what statistical tests do I need to run? form a question for PI
- [X] Understand the basics (read dartbrain)
- [X] get to know the single-subject models (recursive reading) [[https://dartbrains.org/content/Group_Analysis.html][Group Analysis]]
- [X] what analysis will I run? (GLM Decoding model, binary classification model)
- [X] what is the hypothesis? (different number groups are represented in different brain regions) (It is possible to decode number from trials)
- [X] find way to obtain feedback like nix! (possible sol: write helper functions, classes: try collect!)
- [X] survey the interfaces/existing wheels
- [X] how to do the data processing
- [X] figure out what data processing?
- [X] what to search (wheels)
- [X] read docs and tutorial for popular packages (nilearn, pandas, numpy, torch?)
- [X] find an example (huze)
- [X] find an example to follow (NMA)
- [X] go thru the tutorial
- [X] explore fmriprep output structure
- [X] bids standard
- [X] use derivative
- [X] rebuild structure
- [X] use fmriprep to normalize
- [X] see a brain, any brain
- [X] load it in!
- [X] read py mri course
- [X] determine if it's preprocessed
- [X] understand mask
- [X] determine the structure of functional and structural data
- [X] load it in and print it out
- [X] get familiar with bids accessing
- [X] grasp data structure, content, dimensions
- [X] how is it processed?
* Data Structure
:PROPERTIES:
:VISIBILITY: folded
:END:
** Subject
- DD/TA
*** anat
+ t1w json
  - F/M
  - Age
  - Size
+ t1w nii
*** func
**** Task
+ block design
  - initial (6500) & end (12000)
  - each block: 6 trials
  - jittered ITI avg 1500
  - latin square counterbalancing
  - interblock interval: avg 9
+ arithmetic
  - investigate arithmetic problem solving
  - 3 condition (small number, big number, plus one)
  - 36 problems (12 per condition)
  - non 0
+ matching
  - basic number processing
  - primary semantic representation of numerical magnitudes
  - 3 condition (number-dots, shapes, faces)
  - 2 blocks
  - 18 problems (6 trials per condition)
+ vswm
  - 2 condition (press regardless, press if true)
  - 2 loads (3, 5)
  - 24 problems (6 trials per condition per load)

***** runs
- 2 runs
****** types
+ bold json
+ bold nii
+ events tsv
  - onset
  - duration
  - type
  - response time
  - correct
  - task content
  - verification

* Preprocessing
:PROPERTIES:
:VISIBILITY: folded
:END:
- fMRIPrep 1.4.1
- Data S1
- structural: normalized to MNI
- etc.
- fsl

* Tools & tutorials
- [[https://bids.neuroimaging.io/][BIDS]]
- [[https://bids-standard.github.io/pybids/][pybids]]
- [[https://github.com/bids-standard/bids-examples][bids-examples]]
- Fieldtrip, SPM, EEGLAB, MNE-Python and BrainStorm
- [[https://andysbrainbook.readthedocs.io/en/latest/fMRI_Short_Course/fMRI_03_LookingAtTheData.html][fMRI short course]]
- [[https://carpentries-incubator.github.io/SDC-BIDS-fMRI/04-integrating_functional_data.html][python fMRI course]]
- https://www.jneurolab.org/fmriprep-bids
- [[https://lightrun.com/answers/bids-standard-pybids--bidsentityerror-get_events-cant-be-called-because-events-isnt-a-recognized-entity-name][get events]]
- [[https://dartbrains.org/content/Introduction_to_Neuroimaging_Data.html][Dartbrains (dartmouth college)]]
- [[https://gin.g-node.org/ljchang/Localizer][Dartbrains data]]
- [[https://neurolibre.org/][Neurolibre: preprint server for reproducible data analysis]]
- [[https://neurohackademy.org/neurohack_year/2020/][Neurohackademy]]
- reddit
- [[https://neurovault.org][Neurovault (ROI masks), nltools]]
- [[https://neurostars.org][Neurostars forum]]

* notes
- activation map
- spm
- statistical parameter mapping
- roi: draw by area/ do contrast on control (threshold: pvalue 0.001)
- keep in mind the title
- spotlight
- q: children, noisy: remove outliers? smoothing?
- q: what if lower tests are negative?
- q: reason to use roi?
- q: subject differentce: do I normalize before group analysis

* Statistics
- [[https://arxiv.org/pdf/1808.04075][p-value and statistical hypothesis testing]]

* Fresh Stack
- [X] what tests to run, what package, tutorial? (spm)
- [X] organize analysis (glm, contrast, classifier, region determ) (write down the hypothesis?)
- [X] keep an eye on requirements (proj plan, title), learn what a finished proj looks like
- [X] (how to represent the differences)
- [X] p-value, threshholds (t-values, z-scores)
- [X] learn spm
- [X] report with hypotheses tested and results, ask next round of questions
- [X] hypothesis related to DD (effects of dd on number representations; number representations to correlate with DD)
- [X] test these hypothesis
- [X] understand classifier hypothesis
- [X] what to do next (relearn spm?)
- [X] test [1 2 3]
- [X] roi or not, write report along the way
- [ ] ANOVA, t-tests, or machine learning classification
- [ ] define ROI

* Hypothesis
** GLM
*** Activation Hypotheses
- H(0, 1): There is no significant activation in any voxel when a subject views the number n compared to baseline.
*** Number Specificity Hypotheses
- H(0, 2): The pattern of brain activation does not significantly differ between viewing the number 1 and viewing the number 2.
** Contrasts
*** Contrast Hypotheses
- H(0, 3): There is no significant difference in activation between viewing odd numbers (1, 3, 5, 7, 9) and viewing even numbers (2, 4, 6, 8).
** Classifier
*** Classifier Accuracy Hypotheses
- H(0, 5): A classifier cannot predict the number being viewed based on brain activation patterns better than chance.
*** Feature Importance Hypotheses
- H(0, 6): No specific brain region's activation significantly contributes to the classifier's ability to predict the number being viewed.
*** Group level activation Hypotheses
- H(0, 7): The mean activation (beta value) for the contrast of interest across the population is zero.

* To Test
- [ ] define ROI (draw/whole-brain/data-driven methods: cluster-based threshholding)
- [ ] H(1): calculate \mu_\beta_n with single-sample t-test (\forall (n, vox/roi))
- [ ] H(2): calculate \mu_\beta_n1, \mu_\beta_n2 across subjects with paired t-test (\forall (n1, n2))
- [ ] H(3): apply contrast filters to each subject to obtain one contrast-beta for each subject; then use paired t-test to calculate \mu_even and \mu_odd

- [ ] H(5): perform permutation test to determine if the accuracy is significantly better than chance
- [ ] H(6): extract svm weight (\forall (n, sub)); average across subjects (didn't understand!)
- [ ] H(7): Random-Effects Analysis
