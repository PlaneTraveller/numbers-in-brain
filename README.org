#+title: Readme

* Construction Site
A project exploring number and algebra representations in the human brain using fMRI data.

** Dataset
:PROPERTIES:
:VISIBILITY: folded
:END:
- https://openneuro.org/datasets/ds004791/versions/1.0.0
- https://osf.io/y763r/
- https://onlinelibrary.wiley.com/doi/full/10.1002/hbm.26495
- 68 children
- age avg: 9
- 36 problems per run (12 per condition)
- Task: Arithmetic, Matching, VSWM
- Modality: T1w
-

* Dataset Structure
:PROPERTIES:
:VISIBILITY: folded
:END:
** Subject
- DD/TA
*** anat
+ t1w json
  - F/M
  - Age
  - Size
+ t1w nii
*** func
**** Task
+ block design
  - initial (6500) & end (12000)
  - each block: 6 trials
  - jittered ITI avg 1500
  - latin square counterbalancing
  - interblock interval: avg 9
+ arithmetic
  - investigate arithmetic problem solving
  - 3 condition (small number, big number, plus one)
  - 36 problems (12 per condition)
  - non 0
+ matching
  - basic number processing
  - primary semantic representation of numerical magnitudes
  - 3 condition (number-dots, shapes, faces)
  - 2 blocks
  - 18 problems (6 trials per condition)
+ vswm
  - 2 condition (press regardless, press if true)
  - 2 loads (3, 5)
  - 24 problems (6 trials per condition per load)

***** runs
- 2 runs
****** types
+ bold json
+ bold nii
+ events tsv
  - onset
  - duration
  - type
  - response time
  - correct
  - task content
  - verification

* Preprocessing
:PROPERTIES:
:VISIBILITY: folded
:END:
- fMRIPrep 1.4.1
- Data S1
- structural: normalized to MNI
- etc.
- fsl


* Tools & tutorials
- [[https://bids.neuroimaging.io/][BIDS]]
- [[https://bids-standard.github.io/pybids/][pybids]]
- [[https://github.com/bids-standard/bids-examples][bids-examples]]
- Fieldtrip, SPM, EEGLAB, MNE-Python and BrainStorm
- [[https://andysbrainbook.readthedocs.io/en/latest/fMRI_Short_Course/fMRI_03_LookingAtTheData.html][fMRI short course]]
- [[https://carpentries-incubator.github.io/SDC-BIDS-fMRI/04-integrating_functional_data.html][python fMRI course]]
- https://www.jneurolab.org/fmriprep-bids
- [[https://lightrun.com/answers/bids-standard-pybids--bidsentityerror-get_events-cant-be-called-because-events-isnt-a-recognized-entity-name][get events]]
- [[https://dartbrains.org/content/Introduction_to_Neuroimaging_Data.html][Dartbrains (dartmouth college)]]
- [[https://gin.g-node.org/ljchang/Localizer][Dartbrains data]]
- [[https://neurolibre.org/][Neurolibre: preprint server for reproducible data analysis]]
- [[https://neurohackademy.org/neurohack_year/2020/][Neurohackademy]]
- reddit
- [[https://neurovault.org][Neurovault (ROI masks), nltools]]
- [[https://neurostars.org][Neurostars forum]]
- [[https://enigma-toolbox.readthedocs.io/en/latest/index.html][Enigma Toolbox]]
- [[https://neurovault.org/images/395092/][ROIs]]
- [[https://www.doi2bib.org/bib/https://doi.org/10.1176/appi.books.9780890425596][doi2bib]]


* Tasks
** Stack 1 (DONE)
:PROPERTIES:
:VISIBILITY: folded
:END:
- [X] reorganize the repository, write readme, organize results
- [X] organize a presentation for PI
- [X] do classification task on individual numbers (?) (whole brain data)
- [X] train multi-class classification using SVM
- [X] find material
- [X] try it out!
- [X] pair fmri response with task onset info, see it move
- [X] data-wrangling
- [X] download dataset
- [X] create dev env using flake, =shell.nix=
- [X] pyenv
- [X] ROI extraction
- [X] begin group analysis (classifiers) (prereqs?)
- [X] how to save? pickle? nii?
- [X] ask about design mat choice
- [X] what next? group level? classifier?
- [X] write a good plotting function (threshholds? slice at what interval?)
- [X] build single-subject contrasts of different numbers
- [X] find a way to plot
- [X] build & clarify abstraction of design matrices (+clean up notebook format)
- [X] refactor to include specific numbers into the design matrix
- [X] train level 1 glm using ~trial_type~ as design mat
- [X] add smoothing
- [X] add in noise covariates (head motion corr)
- [X] add responses from the same number together, print the 10 numbers
- [X] use task to index data
- [X] write indexing wheels acc. pipeline
- [X] try preliminary processing task to know the interfaces
- [X] what group level to do? use GPT's answer
- [X] figure out the statistical tools needed to test the hypothesis
- [X] learn GLM to translate the topic into mathematical languages
- [X] organize possible analysis for asking
- [X] find an arbitrary analysis to do
- [X] train trial wise glm, use that as feature, linear classifier
- [X] migrate to pure py env.
- [X] find a proper material for the depth of learning
- [X] what statistical tests do I need to run? form a question for PI
- [X] Understand the basics (read dartbrain)
- [X] get to know the single-subject models (recursive reading) [[https://dartbrains.org/content/Group_Analysis.html][Group Analysis]]
- [X] what analysis will I run? (GLM Decoding model, binary classification model)
- [X] what is the hypothesis? (different number groups are represented in different brain regions) (It is possible to decode number from trials)
- [X] find way to obtain feedback like nix! (possible sol: write helper functions, classes: try collect!)
- [X] survey the interfaces/existing wheels
- [X] how to do the data processing
- [X] figure out what data processing?
- [X] what to search (wheels)
- [X] read docs and tutorial for popular packages (nilearn, pandas, numpy, torch?)
- [X] find an example (huze)
- [X] find an example to follow (NMA)
- [X] go thru the tutorial
- [X] explore fmriprep output structure
- [X] bids standard
- [X] use derivative
- [X] rebuild structure
- [X] use fmriprep to normalize
- [X] see a brain, any brain
- [X] load it in!
- [X] read py mri course
- [X] determine if it's preprocessed
- [X] understand mask
- [X] determine the structure of functional and structural data
- [X] load it in and print it out
- [X] get familiar with bids accessing
- [X] grasp data structure, content, dimensions
- [X] how is it processed?
** Fresh Stack (DONE)
:PROPERTIES:
:VISIBILITY: folded
:END:
- [X] what tests to run, what package, tutorial? (spm)
- [X] organize analysis (glm, contrast, classifier, region determ) (write down the hypothesis?)
- [X] keep an eye on requirements (proj plan, title), learn what a finished proj looks like
- [X] (how to represent the differences)
- [X] p-value, threshholds (t-values, z-scores)
- [X] learn spm
- [X] report with hypotheses tested and results, ask next round of questions
- [X] hypothesis related to DD (effects of dd on number representations; number representations to correlate with DD)
- [X] test these hypothesis
- [X] understand classifier hypothesis
- [X] what to do next (relearn spm?)
- [X] test [1 2 3]
- [X] roi or not, write report along the way
- [X] ANOVA, t-tests, or machine learning classification
- [X] define ROI
- [X] start writing results
- [X] write report
- [X] pitch research goal and direction
- [X] organize stuff I'm doing and needs doing
- [X] reorganize, try pitch research goal and direction
- [X] read sample research
- [X] paper plan
- [X] organize result (what I plan to investigate)
- [X] figure out what ROI does, what classifier does (mvpa)
- [X] perform mvpa to examine activation differences
- [X] extract ROI (post-hoc)
- [X] revamp paper
- [X] finish paper draft (1h)
- [X] fill out intro (2h)
- [X] why is it that the second beta value is the one for t-test?
- [X] train svm to do classification on contrast
- [X] talairach roi
- [X] https://nltools.org/auto_examples/01_DataOperations/plot_mask.html
- [X] https://neurovault.org/
- [X] https://neurovault.org/images/395092/ (solvs the roi problem!)
- [X] https://neurovault.org/images/14257/
- [X] start experiment part (1h)
- [X] start intro skeleton (1h)
- [X] finish whole brain level analysis
- [X] ta/dd contrast (odd-even, big-num, etc) t-test (subj level) (easy)
- [X] dd/ta contrast (easy, just change grouping (paired-t-test))
- [X] find dm way to do analysis, do two sample ttest
- [X] organize previous tests, find names, do it (while starting paper) (bottom line: two sample ttest) (2h)
- [X] find and code ta/dd differences (rest)
- [X] find names for all (and dms) (30)
- [X] learn it generally (15)
- [X] speed learn maths (30)
- [X] find paper-code balance
- [X] send data
** Final Stack (DONE)
:PROPERTIES:
:VISIBILITY: folded
:END:
- [X] new mat
- [X] final check
- [X] get title
- [X] finish abstract
- [X] finish discussion
- [X] do analysis
- [X] start analysis
- [X] find way to print ROI
- [X] make better pictures
- [X] svm: box plots of accuracy vs condition (just plot the 10 times and a table for the params)
- [X] within group: done?
- [X] bigsmall within group (1 + 2 or 3?)
- [X] activation map comparison (same as before)
- [X] activation map for all numbers (9 pics, in a block)
- [X] write experiment report part
- [X] finish fixing!
- [X] finish new expts
- [X] gather the story: contributions, topics of exploration, things I've done, results, Know what I need to do
- [X] finish current progress (latex w. citation, pics, tables)
- [X] get one iteration of latex done
- [X] finish intro
- [X] finish matrix
- [X] refactor! first collect what I've saved before, then refactor data loader
- [X] find metric for it

** Final-Final Stack
- [ ] finish draft (try hit 15 pgs) (an addition of 6 pages)
- [ ] chores
- [ ] acknowledgements
- [X] organize todo

- [X] add intro (+2) (midnight)
- [X] expand intro of intro (big to small)
- [X] expand and explain tcm (0.5h)
- [X] add figures in intro (weber's law, etc) (1h)
- [X] chores (citations)
- [X] add fmri, neuroimaging part (bold, etc) (0.5h)

- [X] add methods (+2) (Afternoon)
- [X] add experiment modality figure (dataset explanation)
- [X] add pipeline figure (1h)
- [X] explain maths of methods used (ttest, two leveled GLM equations, mvpa) (1h)

- [X] add results (+1) (night)
- [X] try listing t-values
- [X] examine statistical significance of svm study (1h)

* Notes
** Intro
- visual perception to smaller details (从大到小)
- add figures
- 引言 expand
- tcm explain
- explain fMRI used (mvpa usage)

** Methods
- pipeline figure
- add figure for experiment modality
- explain t-test maths
- equation for GLM
- explain mvpa

** Results
- [X] figure should use one color bar
- list the t-values (top activation, etc)
- use permutation test to test svm
- discuss why it can't work
